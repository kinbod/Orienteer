var en = {
    name: 'Name',
    type: 'Type',
    inverseEnable: 'Inverse enable',
    inverse: 'Inverse',
    noAvailableInverseProperties: 'No available inverse properties',
    cancel: 'Cancel',
    ok: 'OK',
    more: 'More...',
    goToOClassPage: 'Go to class page',
    goToOPropertyPage: 'Go to property page',
    addOPropertyError: 'You can add property in class which only exists in editor',
    info: 'Info',
    error: 'Error',
    classMsg: 'Class',
    property: 'Property',
    existsClasses: 'Exists classes',
    createClass: 'Create class',
    editClass: 'Edit class',
    createProperty: 'Create property',
    editProperty: 'Edit property',
    saveDataModel: 'Save Data Model',
    applyChanges: 'Apply Changes',
    classEmptyName: 'Class name can\'t be empty',
    classNameForbidden: 'Class name contains forbidden characters',
    classExistsInDatabase: 'Class already exists in database',
    classExistsInEditor: 'Class already exists in editor',
    propertyEmptyName: 'Property name can\'t be empty',
    propertyNameForbidden: 'Property name contains forbidden characters',
    propertyExistsInClass: 'Property already exists in class',
    propertyExistsInSuperClass: 'Property already exists in superclass',
    cannotCreateLink: 'Can\'t create link',
    fullscreenMode: 'For enable fullscreen mode press: F11',
    saveDataModelSuccess: 'Data model successfully saved',
    saveDataModelError: 'Error with saving data model',
    applyChangesSuccess: 'Changes apply successful',
    applyChangesError: 'Error with apply changes',
    addClass: 'Add class',
    addExistsClasses: 'Add exists classes',
    addProperty: 'Add property',
    undo: 'Undo',
    redo: 'Redo',
    deleteAction: 'Delete'
};
